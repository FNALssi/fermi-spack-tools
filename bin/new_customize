#!/bin/sh

#
# new_customize -- customize an upstream spack instance with fermi customizations
#


add_fermi_submodules() {

    #
    # Add git submodules we want in our distribution.
    #
    # This:
    # * puts our platform specific configs in the linux subdirectory,
    # * puts our spack extension packages where the above configs say they are
    # * adds recipe repositories we want
    # * we could add a macos or other os specialization as well...
    #

    while read dir repo
    do      
        git submodule add -f $repo $dir
    done <<EOF
        etc/spack/linux	                		https://github.com/marcmengel/fermi-etc-spack-linux.git
        var/spack/extensions/spack-installdir		https://github.com/marcmengel/spack-installdir.git
        var/spack/extensions/spack-subspack		https://github.com/marcmengel/spack-subspack.git
        var/spack/extensions/spack-linuxexternals	https://github.com/marcmengel/spack-linuxexternals.git
        var/spack/extensions/spack-localbuildcache	https://github.com/marcmengel/spack-localbuildcache.git
        var/spack/extensions/spack-mpd			https://github.com/knoepfel/spack-mpd.git
        var/spack/repos/fnal_art			https://github.com/fnalSSI/fnal_art.git
        var/spack/repos/nusofthep-spack-recipes		https://github.com/NuSoftHEP/nusofthep-spack-recipes.git
        var/spack/repos/larsoft-spack-recipes		https://github.com/LArSoft/larsoft-spack-recipes.git
        var/spack/repos/artdaq-spack                    https://github.com/art-daq/artdaq-spack.git
EOF
}

add_fermi_setups() {

   #
   # build toplevel setup-env wrappers that 
   # * set SPACK flags we want
   # * call the stock spack ones
   #

   while read var val
   do
      echo setenv $var $val >> share/spack/setup-env.csh
      echo export $var=$val >> share/spack/setup-env.sh
   done <<EOF
      SPACK_SKIP_MODULES                true
      SPACK_DISABLE_LOCAL_CONFIG        true
EOF
}

add_fermi_submodules
add_fermi_setups
