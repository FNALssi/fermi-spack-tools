#!/bin/sh

# make a sub-spack repository
# ...but make it unified layout...

if [ "$1" == "-t" ]
then
   unified=false
fi
if [ "$1" == "-u" ]
then
    unified=true
fi
if [ $# != 2 ]
then
    echo "usage: make_subspack [-t|-u] /path/to/existing/spack /path/to/new/area"
    exit 1
fi

src=$1
dst=$2


spackbindir=`echo $0 | sed -e 's;make_subspack;;' `
case x$spackbindir in
x/*) ;;
x*)  spackbindir="$PWD/$spackbindir"
esac


spack_release=rollout2


# assume unified layout...
if $unified
then
    install_tree_path=$src
    SPACK_ROOT="$dst/spack/$spack_release/NULL/"
    src="$src/spack/$spack_release/NULL/"
else
    install_tree_path=$src/prd
    SPACK_ROOT="$dst/prd/spack/$spack_release/NULL/"
    src="$src/prd/spack/$spack_release/NULL/"
fi
install_tcl_path=$src/share/spack/modules

SPACK_ROOTb=`basename $dst`
SPACK_ROOTb=`dirname $dst`

mkdir -p $SPACK_ROOTb
export SPACK_ROOT

test -d $SPACK_ROOTb || mkdir -p $SPACK_ROOTb

cd $SPACK_ROOTb
git clone https://cdcvs.fnal.gov/projects/spack-infrastructure-spack $SPACK_ROOT
cd $SPACK_ROOT
git checkout $spack_release

if $unified
then
cp $spackbindir/../templates/config.yaml.unified $SPACK_ROOT/etc/spack/config.yaml
else
cp $spackbindir/../templates/config.yaml.traditional $SPACK_ROOT/etc/spack/config.yaml
fi

cat >> etc/spack/upstreams.yaml <<EOF

 upstreams:
    spack-instance-1:
      install_tree: $install_tree_path
      modules:
        tcl: $install_tcl_path
EOF

echo ". $SPACK_ROOT/share/spack/setup-env.sh" > $dst/setup-env.sh
echo "source $SPACK_ROOT/share/spack/setup-env.csh" > $dst/setup-env.csh
