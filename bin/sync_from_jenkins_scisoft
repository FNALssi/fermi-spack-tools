#!/bin/bash

extract_from_env() {
  local env="$1"
  stem="${env##*/}"
  stem="${stem//[@.]/-}"
  # Extract and create a suitable new name for the environment's
  # spack.yaml file.
  [ -f "$env/spack.yaml" ] && cp -v "$env/spack.yaml" "$stem.yaml"
  if [ -f "$env/spack.lock" ]; then
    # Extract and create a suitable new name for the environment's
    # spack.lock file.
    local targets=()
    local platform_oss=()
    eval "$(perl -e 'use JSON::PP; my $json=JSON::PP->new->utf8->pretty->relaxed; open(FILE, "<'"$env"'/spack.lock"); my $data = join("\n", <FILE>); close(FILE); my $struct=$json->decode($data); print($json->encode($struct));' | sed -Ene 's&^[[:space:]]+"(target|platform_os)" : "([^"]+)".*$&\1s+=("\2")&p' 2>/dev/null)"
    OIFS="$IFS"
    IFS=$'\n'
    platform_os="$platform_oss"
    target="$(echo "${targets[*]}" | sort | uniq -c | sort -n -r -k 1 | head -1 | awk '{ print $2; }')"
    IFS="$OIFS"
    cp -v "$env/spack.lock" "$stem-$platform_os-$target.json"
  fi
}

curl --fail -OL https://buildmaster.fnal.gov/buildmaster/job/build-spack-env/label1=$1/$2/artifact/copyBack/jenkins-build-spack-env-label1=$1-$2.tar.bz2
rm -rf $1-$2 && mkdir $1-$2 && tar -x -C $1-$2 -f jenkins-build-spack-env-label1=$1-$2.tar.bz2
spack mirror rm $1-$2e || true
spack mirror add $1-$2e --type binary https://buildmaster.fnal.gov/buildmaster/job/build-spack-env/$2/label1=$1/artifact/copyBack/spack-emergency-cache
spack mirror rm $1-$2b || true
spack mirror add $1-$2b --type binary https://buildmaster.fnal.gov/buildmaster/job/build-spack-env/$2/label1=$1/artifact/copyBack/spack-binary-cache
spack mirror rm $1-$2c || true
spack mirror add $1-$2c --type binary https://buildmaster.fnal.gov/buildmaster/job/build-spack-env/$2/label1=$1/artifact/copyBack/spack-compiler-cache
spack mirror rm spacl-binary-cache-v3
spack mirror add --type binary spack-binary-cache-v3 /SciSoft/spack-mirror/spack-binary-cache-v3
spack mirror rm spack-compiler-cache-v3
spack mirror add --type binary spack-compiler-cache-v3 /SciSoft/spack-mirror/spack-compiler-cache-v3
spack mirror list

if [ -d $1-$2/spack_env/var/spack/environments ]; then
	for env in $(ls -d $1-$2/spack_env/var/spack/environments/* 2>/dev/null);do
    		extract_from_env "$env"
		spack clean -m && spack env activate $env && spack buildcache sync $1-$2b spack-binary-cache-v3 && spack env deactivate || true
		spack clean -m && spack env activate $env && spack buildcache sync $1-$2e spack-binary-cache-v3 && spack env deactivate || true
	done
  spack clean -m && spack buildcache update-index spack-binary-cache-v3 || true
	for env in $(ls -d $1-$2/spack_env/var/spack/environments/{gcc,clang}* 2>/dev/null);do
    		extract_from_env "$env"
		spack clean -a -m && spack env activate $env && spack buildcache sync $1-$2c spack-compiler-cache-v3 && spack env deactivate || true
	done
  spack clean -m && spack buildcache update-index spack-compiler-cache-v3 || true
fi
