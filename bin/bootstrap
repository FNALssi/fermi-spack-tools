#!/bin/bash 

# pull down fermi-spack-tools  and use it to install spack

usage() {
  cat <<EOF
usage: bootstrap [options] [dest_dir] 
  options:
        --help                              Print this message
        --query-packages                    Run make_packages_yaml rather than putting in templated packages.yaml
        --with_padding                      Set padding in spack config
        --fermi_spack_tools_release ver  fetch the labeled version of fermi_spack_tools
        --fermi_spack_tools_repo url     ...from this git reposity
        --spack_release ver                 fetch the labeled version of Spack
        --spack_repo url                    ...from this git repository
   dest_dir defaults to current directory
EOF
}
# note, other scripts pull these values for defaults
#default_fermi_spack_tools_version=main
#default_spack_version=fnal-develop
default_fermi_spack_tools_version=new_make_spack
default_spack_version=v0.21.0-fermi
default_spack_repo=https://github.com/FNALssi/spack.git
default_fermi_spack_tools_repo=https://github.com/FNALssi/fermi-spack-tools.git

parse_args() {
    with_padding=""
    if x=$(getopt --options "" --longoptions with_padding,help,query-packages,fermi_spack_tools_release:,spack_release:,spack_repo:,fermi_spack_tools_repo: -- "$@")
    then
        eval set : $x
        shift
    else
        usage
        exit 1
    fi

    spack_repo=$default_spack_repo
    fermi_spack_tools_repo=$default_fermi_spack_tools_repo
    ver=$default_fermi_spack_tools_version
    spack_version=$default_spack_version
    query_packages=""

    while [ "${1:0:2}" = "--" ]
    do
        case "x$1" in
        x--with_padding)                 with_padding="--with_padding"; shift;;
        x--spack_release)                spack_version=$2; shift; shift ;;
        x--query-packages)               query_packages="--query-packages"; shift ;;
        x--spack_repo)                   spack_repo=$2; shift; shift ;;
        x--fermi_spack_tools_release) ver=$2; shift; shift ;;
        x--fermi_spack_tools_repo)    fermi_spack_tools_repo=$2; shift; shift ;;
        x--help) usage; exit;;
        x--) shift; break;;
        esac
    done
    dest=${1:-$PWD}
}

detail_log() {
    logfile=/tmp/bootstrap$$.log 
    # use fd 3 for messages to user, send stdout and stderr to log
    # redirect stdin from /dev/null, so anything that tries to prompt
    # for input will fail and not hang because no message gets to the user
    exec 3>&1 > $logfile 2>&1 < /dev/null
    echo "Putting detail log in /tmp/bootstrap$$.log" >&3 
}

monitor() {
   local f=$1
   local sd=$2
   local box="[                                                  ]"
   local lin="[==================================================]"

   printf "%3d%%$box\r" 0 >&3
   while :
   do
       local duf=$(du -b $f)
       local ds="${duf%$f}"
       dpp1=$(( ds / sd ))
       (( dpp1 > 99 )) && dpp1=99
       dpp2=$(( dpp1 / 2 + 1 ))
       printf "%3d%%${lin:0:$dpp2}\r" $dpp1 >&3
       sleep 2
   done
}
start_monitor() {
  monitor $* &
  monitor_pid=$!
  trap "stop_monitor" EXIT
}
stop_monitor() {
  (( monitor_pid )) && kill $monitor_pid
  wait
  clr="                                                         "
  printf "\r$clr\r" >&3
}
message() {
    stop_monitor
    echo $* >&3
    start_monitor $logfile 458
}

check_bootstrap() {
    if [ `spack find | egrep 'fermi-spack-tools' | wc -l` = 1 ]
    then
        :
    else
        message "Bootstrap did NOT complete properly, please attach logfile to a Servicedesk ticket"
        exit 1
    fi
}

main() {
    parse_args "$@"

    detail_log
    mkdir -p $dest/fermi-spack-tools/$ver
    cd $dest

    message "Cloning FNALssi fermi-spack-tools  repository"
    git clone -b $ver $fermi_spack_tools_repo fermi-spack-tools/$ver/NULL/

    PATH=$dest/fermi-spack-tools/$ver/NULL/bin:$PATH

    message "Setting up with make_spack"
    sh -x $dest/fermi-spack-tools/$ver/NULL/bin/make_spack --verbose $query_packages --spack_release $spack_version --spack_repo $spack_repo $with_padding --minimal -u $dest

    message "Finding compilers"
    source $dest/setup-env.sh

    spack compiler find --scope=site

    cd $dest/fermi-spack-tools/$ver/NULL && bin/declare_simple fermi-spack-tools $ver

    check_bootstrap
}

main "$@"
status=$?
stop_monitor
exit $status
