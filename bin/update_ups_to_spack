#!/bin/sh

export SPACK_ROOT="$1"
export PATH=$SPACK_ROOT/bin:$PATH

lastfile=$SPACK_ROOT/var/spack/.last_ups_to_spack
dbfile=$SPACK_ROOT/var/spack/.ups_mirror_db

if [ ! -r $dbfile ]
then
    echo "no dbfile $dbfile"
    exit 1
fi

export UPSDB=`cat $dbfile`
export UPS_THIS_DB=$UPSDB
export PRODUCTS="$UPS_THIS_DB"

if [ ! -d $UPSDB ]
then
    echo "No ups db directory: $UPSDB"
    echo "from dbfile $dbfile"
    exit 1
fi

eval `grep SETUPS_DIR $UPSDB/.upsfiles/dbconfig | sed -e 's/ //g'`

if [ ! -r $SETUPS_DIR/setups ]
then
    echo "No SETUPS_DIR in  $UPSDB/.upsfiles/dbconfig"
    echo "db from dbfile $dbfile"
    exit 1
fi

source $SETUPS_DIR/setups

if [ -r $lastfile ]
then
    timewindow="-newer $lastfile"
else
    if [ -r $db/.initial_ups_to_spack.tgz ]
    then
        cd $SPACK_ROOT
        tar xzvf $db/.initial_ups_to_spack.tgz 
        touch $lastfile.new
        exit 0
    else
        timewindow=""
    fi
fi

touch $lastfile.new
#
# find recent entries in upsdb to migrate
#

prdlist=`find $UPSDB $timewindow -maxdepth 1 -print | sed -e 's;.*/;;'` 

for p in $prdlist
do
    vlist=`find $UPSDB/$p $timewindow -name '*.version' -print | sed -e 's;.*/;;' -e 's/.version//'`

    for v in $vlist
    do
        echo " ==== updating $p $v "
        ups_to_spack -a $p $v
    done
done

mv $lastfile.new $lastfile
